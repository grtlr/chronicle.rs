openapi: 3.0.3
info:
  title: Chronicle REST API
  description: This document specifies the REST API for Chronicle software.
  contact:
    email: contact@iota.org
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 1.0.0
externalDocs:
  description: Find out more about IOTA
  url: "https://iota.org"
servers:
  - url: "http://127.0.0.1:8000"
tags:
  - name: chronicle
    description: Everything about the chronicle application.
  - name: messages
    description: Everything about messages.
  - name: UTXO
    description: Everything about UTXOs.
  - name: transactions
    description: Everything about transactions.
  - name: milestones
    description: Everything about milestones.
  - name: metrics
    description: Application metrics
paths:
  /api/info:
    get:
      tags:
        - chronicle
      summary: Returns general information about the node.
      description: Returns general information about the node.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InfoResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-info-response-example"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  /api/metrics:
    get:
      tags:
        - metrics
      summary: Returns metrics generated for prometheus
      description: Returns metrics generated for prometheus
      responses:
        "200":
          description: Successful operation.
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/MetricsResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  /api/{keyspace}/messages:
    get:
      tags:
        - messages
      summary: Search for the message matching a given indexation key.
      description: Search for messages matching a given indexation key.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: query
          name: index
          schema:
            type: string
          example: HORNET Spammer
          required: true
          description: Indexation key to search for.
        - in: query
          name: page_size
          schema:
            type: number
          example: 100
          description: Requested page size.
        - in: query
          name: utf8
          schema:
            type: boolean
          example: true
          description: Indicates whether the provided index is UTF-8. If not provided or false, the index will be encoded by the server.
        - in: query
          name: expanded
          schema:
            type: boolean
          example: true
          description: Requests additional data for each message id if included and true.
        - in: query
          name: state
          schema:
            type: string
          description: The paging state, to be stored and re-used when retrieving additional records. Hex encoded.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/MessagesFindResponse"
                  - $ref: "#/components/schemas/MessagesFindExpandedResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-messages-by-index-response-example"
        "400":
          description: >-
            Unsuccessful operation: indicates that the provided index is invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not
            found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/messages/{messageId}":
    get:
      tags:
        - messages
      summary: Returns message data as JSON by its identifier.
      description: >-
        Find a message by its identifer. This endpoint returns the given message
        as JSON.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
              examples:
                Empty Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-empty-response-example
                Transaction Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-transaction-response-example
                Milestone Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-milestone-response-example
                Indexation Payload:
                  $ref: >-
                    #/components/examples/get-message-by-id-indexation-response-example
        "400":
          description: "Unsuccessful operation: indicates that the provided message id is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not
            found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/messages/{messageId}/metadata":
    get:
      tags:
        - messages
      summary: Find the metadata of a given message.
      description: Find the metadata of a given message.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageMetadataResponse"
              examples:
                New Message:
                  $ref: "#/components/examples/get-message-by-id-response-example-new"
                Solid:
                  $ref: >-
                    #/components/examples/get-message-by-id-response-example-solid
                Included:
                  $ref: >-
                    #/components/examples/get-message-by-id-response-example-included
                Conflicting:
                  $ref: >-
                    #/components/examples/get-message-by-id-response-example-conflicting
        "400":
          description: "Unsuccessful operation: indicates that the provided message id is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not
            found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/messages/{messageId}/children":
    get:
      tags:
        - messages
      summary: Returns the children of a message.
      description: Returns the children of a message.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
        - in: query
          name: page_size
          schema:
            type: number
          example: 6000
          description: Requested page size.
        - in: query
          name: expanded
          schema:
            type: boolean
          example: true
          description: Requests additional data for each message id if included and true.
        - in: query
          name: state
          schema:
            type: string
          description: The paging state, to be stored and re-used when retrieving additional records. Hex encoded.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/MessageChildrenResponse"
                  - $ref: "#/components/schemas/MessageChildrenExpandedResponse"
              examples:
                Children were found:
                  $ref: >-
                    #/components/examples/get-messages-by-id-response-example-children
                No children were found:
                  $ref: >-
                    #/components/examples/get-messages-by-id-response-example-nochildren
        "400":
          description: "Unsuccessful operation: indicates that the provided message id is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not
            found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/outputs/{outputId}":
    get:
      tags:
        - UTXO
      summary: Find an output by its identifier.
      description: Find an output by its identifier.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: outputId
          schema:
            type: string
          required: true
          description: >-
            Identifier of the output encoded in hex. An output is identified by
            the concatenation of `transaction_id+output_index`.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-outputs-by-id-response-example"
        "400":
          description: "Unsuccessful operation: indicates that the provided output id is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/outputs/{transactionId}/{transactionOutputIndex}":
    get:
      tags:
        - UTXO
      summary: Find an output by its transaction ID and index.
      description: Find an output by its transaction ID and index.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: transactionId
          schema:
            type: string
          required: true
          description: >-
            Identifier of the transaction encoded in hex. An output is identified by
            the concatenation of `transaction_id+output_index`.
        - in: path
          name: transactionOutputIndex
          schema:
            type: number
          required: true
          description: >-
            Index of the output encoded in hex. An output is identified by
            the concatenation of `transaction_id+output_index`.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutputResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-outputs-by-id-response-example"
        "400":
          description: "Unsuccessful operation: indicates that the provided output id is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/addresses/ed25519/{address}/outputs":
    get:
      tags:
        - UTXO
      summary: Get all outputs that use a given hex-encoded Ed25519 address.
      description: >-
        Get all outputs that use a given hex-encoded Ed25519 address. If count
        equals maxResults, then there might be more outputs available but those
        were skipped for performance reasons. User should sweep the address to
        reduce the amount of outputs.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: address
          schema:
            type: string
          example: efdc112efe262b304bcf379b26c31bad029f616ee3ec4aa6345a366e4c9e43a3
          required: true
          description: hex-encoded Ed25519 address that is referenced by the outputs.
        - in: query
          name: expanded
          schema:
            type: boolean
          example: true
          description: Requests additional data for each output if included and true.
        - in: query
          name: included
          schema:
            type: boolean
          example: false
          description: Determines whether only ledger-included outputs are shown.
        - in: query
          name: page_size
          schema:
            type: number
          example: 6000
          description: Requested page size.
        - in: query
          name: state
          schema:
            type: string
          description: The paging state, to be stored and re-used when retrieving additional records. Hex encoded.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/OutputsAddressResponse"
                  - $ref: "#/components/schemas/OutputsAddressExpandedResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-address-outputs-response-example"
        "400":
          description: "Unsuccessful operation: indicates that the provided address is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/milestones/{index}":
    get:
      tags:
        - milestones
      summary: Look up a milestone by a given milestone index.
      description: Look up a milestone by a given milestone index.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: index
          schema:
            type: number
          example: 154862
          required: true
          description: Index of the milestone to look up.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MilestoneResponse"
              examples:
                default:
                  $ref: >-
                    #/components/examples/get-milestone-by-index-response-example
        "400":
          description: "Unsuccessful operation: indicates that the provided milestone index is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/transactions/ed25519/{address}":
    get:
      tags:
        - transactions
      summary: Get all transactions involving given hex-encoded Ed25519 address.
      description: >-
        Get all transactions involving a given hex-encoded Ed25519 address.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: address
          schema:
            type: string
          example: efdc112efe262b304bcf379b26c31bad029f616ee3ec4aa6345a366e4c9e43a3
          required: true
          description: hex-encoded Ed25519 address that is referenced by the outputs.
        - in: query
          name: page_size
          schema:
            type: number
          example: 6000
          description: Requested page size.
        - in: query
          name: state
          schema:
            type: string
          description: The paging state, to be stored and re-used when retrieving additional records. Hex encoded.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-transactions-response-example"
        "400":
          description: "Unsuccessful operation: indicates that the provided address is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/transactions/{messageId}":
    get:
      tags:
        - transactions
      summary: Get the transaction information for a message.
      description: Get the transaction information for a message.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: messageId
          schema:
            type: string
          example: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          required: true
          description: Identifier of the message.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-transaction-response-example"
        "400":
          description: "Unsuccessful operation: indicates that the provided messageId is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
  "/api/{keyspace}/transactions/{transactionId}/included-message":
    get:
      tags:
        - transactions
      summary: Look up an included message by a transaction id.
      description: Look up an included message by a transaction id.
      parameters:
        - in: path
          name: keyspace
          schema:
            type: string
          example: chronicle
          required: true
          description: Identifier indicating which keyspace to search within.
        - in: path
          name: transactionId
          schema:
            type: string
          example: 50a419a1e46b0b8fbac0e38cd20d4c0d6a5285556241c6778b13e578e36938b8
          required: true
          description: Transaction ID to look up.
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
              examples:
                default:
                  $ref: "#/components/examples/get-included-message-of-transaction-example"
        "400":
          description: "Unsuccessful operation: indicates that the provided message id is invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestResponse"
        "404":
          description: >-
            Unsuccessful operation: indicates that the requested data was not
            found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundResponse"
        "500":
          description: >-
            Unsuccessful operation: indicates that an unexpected, internal
            server error happened which prevented the node from fulfilling the
            request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorResponse"
components:
  examples:
    get-info-response-example:
      value:
        data:
          name: Chronicle
          version: 0.1.0
          isHealthy: true
          networkId: mainnet
          bech32HRP: iota
          latestMilestoneIndex: 25211
          confirmedMilestoneIndex: 25211
          pruningIndex: 0
          features:
            - PoW
          minPowScore: 4000
    get-messages-by-index-response-example:
      value:
        data:
          index: HORNET Spammer
          maxResults: 2000
          count: 2
          messageIds:
            - id: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
              inclusionState: noTransaction
              milestoneIndex: 224118
            - id: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
              inclusionState: included
              milestoneIndex: 224118
          state: "0000000100000000000000383413009100"
    get-message-by-id-response-example-new:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parentMessageIds:
            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: false
          shouldPromote: true
          shouldReattach: false
    get-message-by-id-response-example-solid:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parentMessageIds:
            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: true
          shouldPromote: false
          shouldReattach: false
    get-message-by-id-response-example-included:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parentMessageIds:
            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: true
          referencedByMilestoneIndex: 15465
          ledgerInclusionState: included
    get-message-by-id-response-example-conflicting:
      value:
        data:
          messageId: f532a53545103276b46876c473846d98648ee418468bce76df4868648dd73e5d
          parentMessageIds:
            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
            - d97e89e49ed263b763afeda192515fe154ec826ceb92ef08926cd68ec02c9510
          isSolid: true
          referencedByMilestoneIndex: 15465
          ledgerInclusionState: conflicting
          conflictReason: 1
    get-message-by-id-empty-response-example:
      value:
        data:
          networkId: "6530425480034647824"
          parentMessageIds:
            - c0b728d4c292860b57747c7bfbd989ccc40be8c76229022644c05e1352bf1ea3
            - e8db39681478cf9826bd2f31d045f16f5e1f478c5abc3030419da7911df9e288
          payload: null
          nonce: "1481"
    get-message-by-id-transaction-response-example:
      value:
        data:
          networkId: "9466822412763346725"
          parentMessageIds:
            - 6c5bc96948813faaf6d5a5f0c6bc453bf2e5343664884aea2873041bdc47c4ca
            - 97e2c4fce0f6e1023c19ed634e37a44744e21a743a79e8f1fc16d31dc8f47481
            - c107c5f3d6189954c9b1b8e2fa556db4bcf7ad2da717d328ecf6d9a841a5f37d
            - ea19397d2670f904c4d8c8616ef7a0724321512f1c09f8eb2aeb0cc4299e2441
          payload:
            type: 0
            essence:
              type: 0
              inputs:
                - type: 0
                  transactionId: >-
                    0c78e998f5177834ecb3bae1596d5056af76e487386eecb19727465b4be86a79
                  transactionOutputIndex: 0
                - type: 0
                  transactionId: >-
                    309b169bfa60c8cf80afd730741862d200405d5df7cabfe9b564361dce1f7036
                  transactionOutputIndex: 0
                - type: 0
                  transactionId: >-
                    c138ecdc882010245e9574fbc1f1f43cc7c182fa890e46e018365dd49de0f16e
                  transactionOutputIndex: 0
              outputs:
                - type: 0
                  address:
                    type: 0
                    address: >-
                      d49931814e6bfbb8e221f1b2936e206e5a6b6abeb9c070f8603814c525c9abe3
                  amount: 50000000
              payload: null
            unlockBlocks:
              - type: 0
                signature:
                  type: 0
                  publicKey: >-
                    40d0c00fd629a5f528e4bcab4333926a90d06613a3f36a325defcdaf4c9e4092
                  signature: >-
                    ed4a63a3e1b22c85f9813b00a21c8576ed72c1f5bc939d01fcea7dcd678c2d0d8d80a2499965d8ce5574c9e92aa0d42b72b969bab3a2a35fe7dbc64659a0d703
              - type: 1
                reference: 0
              - type: 1
                reference: 0
          nonce: "1020884"
    get-message-by-id-milestone-response-example:
      value:
        data:
          networkId: "9466822412763346725"
          parentMessageIds:
            - 1861f88721e76f7f291a37c849264e71c766908b6f4057d440582f4290ad2074
            - 406328b8d66ac0dd01d8d0c5413a1c34c2135c2c9e50f683a066a13dad2b4f20
            - 96950fefe3c106e8f68e8eced1239dc0d0dec87ce9ea46158c742ad90dbb9b7a
            - b5b5f72d4221ff1cf45237e0824ee6f44a5ccab32c8d9d1ecbce9aba6361a3c5
            - f7708a83118a69d21c2cb438dc3d2c8237f20efb289ab58eb070c6482815c619
          payload:
            type: 1
            index: 61986
            timestamp: 1613036231
            parentMessageIds:
              - 1861f88721e76f7f291a37c849264e71c766908b6f4057d440582f4290ad2074
              - 406328b8d66ac0dd01d8d0c5413a1c34c2135c2c9e50f683a066a13dad2b4f20
              - 96950fefe3c106e8f68e8eced1239dc0d0dec87ce9ea46158c742ad90dbb9b7a
              - b5b5f72d4221ff1cf45237e0824ee6f44a5ccab32c8d9d1ecbce9aba6361a3c5
              - f7708a83118a69d21c2cb438dc3d2c8237f20efb289ab58eb070c6482815c619
            inclusionMerkleProof: 0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8
            publicKeys:
              - 7205c145525cee64f1c9363696811d239919d830ad964b4e29359e6475848f5a
              - e468e82df33d10dea3bd0eadcd7867946a674d207c39f5af4cc44365d268a7e6
            receipt: null
            signatures:
              - >-
                971f23b0b5e508eaa37fdbbaed85d73f36c511900d3b4fb8223dbcf3a3a32d3eae5e9344342344372866f251ffdfeb26f58a1c1c16929a0cdaf9e8ae718d8e0c
              - >-
                e4785d69c69605257326741a45398604aeb73725700d8d3590e186f55aa20101ea8ca3e1b7b194423cc8773c341820234028221637a0800548c203f1c7d8cb00
          nonce: "10760600709664144612"
    get-message-by-id-indexation-response-example:
      value:
        data:
          networkId: "9466822412763346725"
          parentMessageIds:
            - 222e88a63e5aca8ef48d3b8749e2fab51d1bc7c34c5604a2933ca2f180b342c9
            - a22137ebe61435c6d0f3e16ad148376778d7bfb36e27329f02c221ec109525a6
            - a6db9d0b3ecb274d90c21e9dde04012b2d13ad8aa0b90e82e7d3b626be67119d
            - fd31d9c926b5d97ae016535d66baee511dfa3b713b61d8eba2ae5c9929e38ca7
          payload:
            type: 2
            index: 68656c6c6f20776f726c64
            data: >-
              5370616d6d696e6720646174612e0a436f756e743a203037323935320a54696d657374616d703a20323032312d30322d31315431303a32333a34392b30313a30300a54697073656c656374696f6e3a203934c2b573
          nonce: "2102864"
    get-messages-by-id-response-example-children:
      value:
        data:
          messageId: ed3c3f1a319ff4e909cf2771d79fece0ac9bd9fd2ee49ea6c0885c9cb3b1248c
          maxResults: 1000
          count: 2
          childrenMessageIds:
            - 1c6943b0487c92fd057d4d22ad844cc37ee27fe6fbe88e5ff0d20b2233f75b9d
            - 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          state: "0000000100000000000000383413009100"
    get-messages-by-id-response-example-nochildren:
      value:
        data:
          messageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          maxResults: 1000
          count: 0
          childrenMessageIds: []
    get-outputs-by-id-response-example:
      value:
        data:
          messageId: 9cd745ef6800c8e8c80b09174ee4b250b3c43dfa62d7c6a4e61f848febf731a0
          transactionId: 1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a5298
          outputIndex: 1
          isSpent: false
          output:
            type: 0
            address:
              type: 0
              address: 8eaf87ac1f52eb05f2c7c0c15502df990a228838dc37bd18de9503d69afd257d
            amount: 1000
    get-address-outputs-response-example:
      value:
        data:
          addressType: 0
          address: efdc112efe262b304bcf379b26c31bad029f616ee3ec4aa6345a366e4c9e43a3
          maxResults: 1000
          count: 4
          outputIds:
            - >-
              1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a52980100
            - >-
              3d36ec4afb2d634b9313f84606b98b69675a3ef6f44dcdecb18c30945b57221e0100
            - >-
              ee3447d088e3e2c53c5b3e56a38fdc859ca2c4b4161cf256c0462ce4d34731820100
            - >-
              f8bdbfb0f57ade7fbb95d31b11e2dbda9b2a35e9dc0cd3e11cb324e8a6bedc260100
          state: "0000000100000000000000383413009100"
    get-transaction-response-example:
      value:
        data:
          - messageId: 4892799948c3016993485c228a65dc8607cc3a775b542ab40e70b4dae1aa82e3
            milestoneIndex: 1258552
            outputs:
              - output:
                  address:
                    type: 0
                    address: bdee293746b2e4552f2ec55aebf2daffa088361d262b5222dea48b9fce338968
                  amount: 7379500000
                  type: 0
                spendingMessageId: e3e8156f8b0b0d15ca1c03e2ce3a23934e710d3e7a49639903fc75425ca20c6e
              - output:
                  address:
                    type: 0
                    address: ff986175c1cea708fa15aaae7ec816341fac2b2ad029bf4fffb28fa0b496a2d5
                  type: 0
                  amount: 795500000
                spendingMessageId: null
            inputs:
              - type: 0
                transactionId: f4e76c3121dbe27ce39a779e391fc8aa4668b7a9c868cae1690492d2251fd4a6
                transactionOutputIndex: 0
    get-transactions-response-example:
      value:
        data:
          transactions:
            - messageId: 4892799948c3016993485c228a65dc8607cc3a775b542ab40e70b4dae1aa82e3
              milestoneIndex: 1258552
              outputs:
                - output:
                    address:
                      type: 0
                      address: bdee293746b2e4552f2ec55aebf2daffa088361d262b5222dea48b9fce338968
                    amount: 7379500000
                    type: 0
                  spendingMessageId: e3e8156f8b0b0d15ca1c03e2ce3a23934e710d3e7a49639903fc75425ca20c6e
                - output:
                    address:
                      type: 0
                      address: ff986175c1cea708fa15aaae7ec816341fac2b2ad029bf4fffb28fa0b496a2d5
                    type: 0
                    amount: 795500000
                  spendingMessageId: null
              inputs:
                - type: 0
                  transactionId: f4e76c3121dbe27ce39a779e391fc8aa4668b7a9c868cae1690492d2251fd4a6
                  transactionOutputIndex: 0
          state: "0000000100000000000000383413009100"
    get-treasury-response-example:
      value:
        data:
          milestoneId: 733ed2810f2333e9d6cd702c7d5c8264cd9f1ae454b61e75cf702c451f68611d
          amount: 133713371337
    get-included-message-of-transaction-example:
      value:
        data:
          networkId: "7712883261355838377"
          parentMessageIds:
            - 174e3151f6ce2cfb7f00829ac4a96a35caa2078cc20eba99359867cd21aad0d6
            - 5807bb4ad068e6cdadd103218e4e24ed55b62c985d4f64e97808d9f09180f89c
            - 7a09324557e9200f39bf493fc8fd6ac43e9ca750c6f6d884cc72386ddcb7d695
            - de9e9d780ba7ebeebc38da16cb53b2a8991d38eee94bcdc3f3ef99aa8c345652
          payload:
            type: 0
            essence:
              type: 0
              inputs:
                - type: 0
                  transactionId: >-
                    af7579fb57746219561072c2cc0e4d0fbb8d493d075bd21bf25ae81a450c11ef
                  transactionOutputIndex: 0
              outputs:
                - type: 0
                  address:
                    type: 0
                    address: >-
                      a18996d96163405e3c0eb13fa3459a07f68a89e8cf7cc239c89e7192344daa5b
                  amount: 1000000
              payload:
                type: 2
                index: 454f59
                data: ""
            unlockBlocks:
              - type: 0
                signature:
                  type: 0
                  publicKey: >-
                    ee26ac07834c603c22130fced361ca58552b0dbfc63e4b73ba24b3b59d9f4050
                  signature: >-
                    0492a353f96883c472e2686a640e77eda30be8fcc417aa9fc1c15eae854661e0253287be6ea68f649f19ca590de0a6c57fb88635ef0e013310e0be2b83609503
          nonce: "17293822569102719312"
    get-milestone-by-index-response-example:
      value:
        data:
          index: 15465
          messageId: 7ed3d67fc7b619e72e588f51fef2379e43e6e9a856635843b3f29aa3a3f1f006
          timestamp: 1602227215
    get-utxo-changes-response-example:
      value:
        data:
          index: 15465
          createdOutputs:
            - >-
              1ee46e19f4219ee65afc10227d0ca22753f76ef32d1e922e5cbe3fbc9b5a52980100
            - >-
              ee3447d088e3e2c53c5b3e56a38fdc859ca2c4b4161cf256c0462ce4d34731820100
            - >-
              f8bdbfb0f57ade7fbb95d31b11e2dbda9b2a35e9dc0cd3e11cb324e8a6bedc260100
          consumedOutputs:
            - >-
              3d36ec4afb2d634b9313f84606b98b69675a3ef6f44dcdecb18c30945b57221e0100
  schemas:
    Message:
      description: >-
        A message is the object nodes gossip around in the network. It always
        references two other messages that are known as parents. It is stored as
        a vertex on the tangle data structure that the nodes maintain. A message
        can have a maximum size of 32Kb.
      properties:
        networkId:
          type: string
          description: >-
            Network identifier. This field signifies for which network the
            message is meant for. It also tells which protocol rules apply to
            the message. It is computed out of the first 8 bytes of the
            `BLAKE2b-256` hash of the concatenation of the network type and
            protocol version string.
        parentMessageIds:
          type: array
          description: The identifiers of the messages this message references.
          items:
            type: string
        payload:
          oneOf:
            - $ref: "#/components/schemas/TransactionPayload"
            - $ref: "#/components/schemas/MilestonePayload"
            - $ref: "#/components/schemas/IndexationPayload"
            - $ref: "#/components/schemas/ReceiptPayload"
        nonce:
          type: string
          description: >-
            The nonce which lets this message fulfill the Proof-of-Work
            requirement.
      required:
        - networkId
        - parentMessageIds
        - payload
        - nonce
    ReceiptPayload:
      description: Contains a receipt and the index of the milestone which contained the receipt.
      properties:
        migratedAt:
          type: integer
        final:
          type: boolean
        funds:
          type: array
          items:
            $ref: "#/components/schemas/MigratedFundsEntry"
        transaction:
          $ref: "#/components/schemas/TreasuryTransactionPayload"
      required:
        - migratedAt
        - final
        - funds
        - transaction
    MigratedFundsEntry:
      properties:
        tailTransactionHash:
          type: string
        address:
          oneOf:
            - $ref: "#/components/schemas/Ed25519Address"
        deposit:
          type: integer
      required:
        - tailTransactionHash
        - address
        - deposit
    TransactionPayload:
      description: The Transaction Payload to be embedded into a message.
      properties:
        type:
          type: integer
          description: Set to value 0 to denote a Transaction Payload.
        essence:
          type: object
          oneOf:
            - $ref: "#/components/schemas/TransactionEssence"
        unlockBlocks:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/SignatureUnlockBlock"
              - $ref: "#/components/schemas/ReferenceUnlockBlock"
      required:
        - type
        - essence
        - unlockBlocks
    TransactionEssence:
      description: >-
        Describes the essence data making up a transaction by defining its
        inputs and outputs and an optional payload.
      properties:
        type:
          type: integer
          description: Set to value 0 to denote a Transaction Essence.
        inputs:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/UTXOInput"
        outputs:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/SigLockedSingleOutput"
              - $ref: "#/components/schemas/SigLockedDustAllowanceOutput"
        payload:
          oneOf:
            - $ref: "#/components/schemas/IndexationPayload"
          nullable: true
      required:
        - type
        - inputs
        - outputs
        - payload
    UTXOInput:
      description: >-
        Describes an input which references an unspent transaction output to
        consume.
      properties:
        type:
          type: integer
          description: Set to value 0 to denote an UTXO Input.
        transactionId:
          type: string
          description: >-
            The BLAKE2b-256 hash of the transaction from which the UTXO comes
            from.
        transactionOutputIndex:
          type: integer
          description: The index of the output on the referenced transaction to consume.
      required:
        - type
        - transactionId
        - transactionOutputIndex
    SigLockedSingleOutput:
      description: >-
        Describes a deposit to a single address which is unlocked via a
        signature.
      properties:
        type:
          type: integer
          description: Set to value 0 to denote a SigLockedSingleOutput.
        address:
          anyOf:
            - $ref: "#/components/schemas/Ed25519Address"
        amount:
          type: integer
          description: >-
            The amount of tokens to deposit with this SigLockedSingleOutput
            output.
      required:
        - type
        - address
        - amount
    SigLockedDustAllowanceOutput:
      description: >-
        Output type for deposits that enables an address to receive dust
        outputs. It can be consumed as an input like a regular
        SigLockedSingleOutput
      properties:
        type:
          type: integer
          description: Set to value 1 to denote a SigLockedDustAllowanceOutput.
        address:
          anyOf:
            - $ref: "#/components/schemas/Ed25519Address"
        amount:
          type: integer
          description: >-
            The amount of tokens to deposit with this
            SigLockedDustAllowanceOutput output.
      required:
        - type
        - address
        - amount
    Ed25519Address:
      description: The Ed25519 address.
      properties:
        type:
          type: integer
          description: Set to value 0 to denote an Ed25519 Address.
        address:
          type: string
          description: The hex-encoded BLAKE2b-256 hash of the Ed25519 public key.
      required:
        - type
        - address
    SignatureUnlockBlock:
      description: Defines an unlock block containing signature(s) unlocking input(s).
      properties:
        type:
          type: integer
          description: Denotes a Signature Unlock Block.
        signature:
          type: object
          oneOf:
            - $ref: "#/components/schemas/Ed25519Signature"
      required:
        - type
        - signature
    Ed25519Signature:
      description: The Ed25519 signature.
      properties:
        type:
          type: integer
          description: Set to value 0 to denote an Ed25519 Signature.
        publicKey:
          type: string
          description: >-
            The public key of the Ed25519 keypair which is used to verify the
            signature.
        signature:
          type: string
          description: The signature signing the serialized Transaction Essence.
      required:
        - type
        - publicKey
        - signature
    ReferenceUnlockBlock:
      description: >-
        References a previous unlock block in order to substitute the
        duplication of the same unlock block data for inputs which unlock
        through the same data.
      properties:
        type:
          type: integer
          description: Set to value 1 to denote a Reference Unlock Block.
        reference:
          type: integer
          description: Represents the index of a previous unlock block.
      required:
        - type
        - reference
    MilestonePayload:
      description: The Milestone Payload to be embedded into a message.
      properties:
        type:
          type: integer
          description: Set to value 1 to denote a Milestone Payload.
        index:
          type: integer
          description: The index of the milestone.
        timestamp:
          type: integer
          description: >-
            The Unix timestamp at which the milestone was issued. The unix
            timestamp is specified in seconds.
        parents:
          description: The identifiers of the messages this milestone  references.
          type: array
          items:
            type: string
        inclusionMerkleProof:
          type: string
          description: >-
            256-bit hash based on the message IDs of all the not-ignored
            state-mutating transactions referenced by the milestone.
        publicKeys:
          type: array
          items:
            type: string
          description: >-
            An array of public keys to validate the signatures. The keys must be
            in lexicographical order.
        signatures:
          type: array
          items:
            type: string
          description: >-
            An array of signatures signing the serialized Milestone Essence. The
            signatures must be in the same order as the specified public keys.
      required:
        - type
        - index
        - timestamp
        - parents
        - inclusionMerkleProof
        - publicKeys
        - signatures
    IndexationPayload:
      description: The Indexation Payload to be embedded into a message.
      properties:
        type:
          type: integer
          description: Set to value 2 to denote a Indexation Payload.
        index:
          type: string
          description: >-
            The indexation key to find/look up this message. It has a size
            between 1 and 64 bytes and must be encoded as a hex-string.
        data:
          type: string
          description: The optional data to attach. This may have a length of 0.
      required:
        - type
        - index
        - data
    TreasuryTransactionPayload:
      properties:
        type:
          type: integer
          description: Set to value 4 to denote a Treasury Payload.
        input:
          allOf:
            - $ref: "#/components/schemas/TreasuryInput"
        output:
          allOf:
            - $ref: "#/components/schemas/TreasuryOutput"
      required:
        - type
        - input
        - output
    TreasuryInput:
      properties:
        type:
          type: integer
          description: Set to value 1 to denote a TreasuryInput.
        milestoneId:
          type: string
      required:
        - type
        - milestoneId
    TreasuryOutput:
      properties:
        type:
          type: integer
          description: Set to value 2 to denote a TreasuryOutput.
        amount:
          type: integer
      required:
        - type
        - amount
    Record:
      properties:
        id:
          type: string
          description: The identifier of the record.
        inclusionState:
          type: string
          enum:
            - included
            - conflicting
            - noTransaction
          description: >-
            If `included`, the message contains a transaction that has been
            included in the ledger. If `conflicitng`, the message contains a
            transaction that has not been included in the ledger because it
            conflicts with another transaction. If the message does not
            contain a transaction, `ledgerInclusionState` is set to
            `noTransaction`.
        milestoneIndex:
          type: integer
          description: >-
            If set, this message can be considered as a valid milestone
            message. This field therefore describes the milestone index of
            the involved milestone. A message can be considered as a valid
            milestone message if the milestone payload is valid and if the
            referenced parents in the milestone payload do match the
            referenced parents in the message itself. Note it's possible to
            have different milestone messages that all represent the same
            milestone.
      required:
        - id
        - inclusionState
        - milestoneIndex
    MetricsResponse:
      description: The metrics generated in the prometheus format
      example: |-
        # HELP incoming_requests Incoming Requests
        # TYPE incoming_requests counter
        incoming_requests 5
        # HELP response_code Response Codes
        # TYPE response_code counter
        response_code{statuscode="200",type="200"} 4
        # HELP response_time Response Times
        # TYPE response_time histogram
        response_time_bucket{endpoint="GET /api/metrics",le="0.005"} 0
        response_time_bucket{endpoint="GET /api/metrics",le="0.01"} 0
        response_time_bucket{endpoint="GET /api/metrics",le="0.025"} 0
        response_time_bucket{endpoint="GET /api/metrics",le="0.05"} 0
        response_time_bucket{endpoint="GET /api/metrics",le="0.1"} 0
        response_time_bucket{endpoint="GET /api/metrics",le="0.25"} 0
        response_time_bucket{endpoint="GET /api/metrics",le="0.5"} 0
        response_time_bucket{endpoint="GET /api/metrics",le="1"} 4
        response_time_bucket{endpoint="GET /api/metrics",le="2.5"} 4
        response_time_bucket{endpoint="GET /api/metrics",le="5"} 4
        response_time_bucket{endpoint="GET /api/metrics",le="10"} 4
        response_time_bucket{endpoint="GET /api/metrics",le="+Inf"} 4
        response_time_sum{endpoint="GET /api/metrics"} 4
        response_time_count{endpoint="GET /api/metrics"} 4
    ErrorResponse:
      description: The error format.
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: The application error code.
            message:
              type: string
              description: The error reason.
          required:
            - code
            - message
      required:
        - error
    BadRequestResponse:
      description: Indicates that the request was bad.
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
      example:
        error:
          code: 400
          message: Invalid data provided!
    NotFoundResponse:
      description: Indicates that the endpoint or data was not found.
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
      example:
        error:
          code: 404
          message: Endpoint or data does not exist!
    InternalErrorResponse:
      description: >-
        Indicates that the server encountered an unexpected condition, which
        prevented it from fulfilling the request by the client.
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
      example:
        error:
          code: 500
          message: Internal server error!
    InfoResponse:
      description: Returns general information about the node.
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: The name of the node.
            version:
              type: string
              description: The semantic version of the node.
            isHealthy:
              type: boolean
              description: Tells whether the node is healthy or not.
            networkId:
              type: string
              description: Tells on which network the nodes operates on.
            bech32HRP:
              type: string
              description: >-
                Tells whether the node supports mainnet or testnet addresses.
                Value `iota` indicates that the node supports mainnet addresses.
                Value `atoi` indicates that the node supports testnet addresses.
            latestMilestoneIndex:
              type: integer
              description: The most recent milestone known to the node.
            confirmedMilestoneIndex:
              type: integer
              description: The most recent milestone that has been confirmed by the node.
            pruningIndex:
              type: integer
              description: Tells from which starting point the node holds data.
            features:
              description: >-
                The features that are supported by the node. For example, a node
                could support the Proof-of-Work (PoW) feature, which would allow
                the PoW to be performed by the node itself.
              type: array
              items:
                type: string
            minPowScore:
              description: >-
                The Proof-of-Work difficulty for a message to be sent over the
                network to mitigate spam.
              type: number
              format: float
          required:
            - name
            - version
            - isHealthy
            - networkId
            - bech32HRP
            - latestMilestoneIndex
            - confirmedMilestoneIndex
            - pruningIndex
            - features
            - minPowScore
      required:
        - data
    MessagesFindResponse:
      description: Searches for messages matching a given indexation key.
      properties:
        data:
          type: object
          properties:
            index:
              type: string
              description: >-
                The provided hex-encoded indexation key that was used to search
                for.
            maxResults:
              type: integer
              description: The number of results it can return at most.
            count:
              type: integer
              description: The actual number of found results.
            messageIds:
              type: array
              items:
                type: string
              description: >-
                The identifiers of the found messages that match the given
                indexation key.
            state:
              type: string
              description: The state used to get the next page of results.
          required:
            - index
            - maxResults
            - count
            - messageIds
            - state
      required:
        - data
    MessagesFindExpandedResponse:
      description: Searches for messages matching a given indexation key with expanded results.
      properties:
        data:
          type: object
          properties:
            index:
              type: string
              description: >-
                The provided hex-encoded indexation key that was used to search
                for.
            maxResults:
              type: integer
              description: The number of results it can return at most.
            count:
              type: integer
              description: The actual number of found results.
            messageIds:
              type: array
              items:
                $ref: "#/components/schemas/Record"
              description: >-
                The identifiers of the found messages that match the given
                indexation key.
            state:
              type: string
              description: The state used to get the next page of results.
          required:
            - index
            - maxResults
            - count
            - messageIds
            - state
      required:
        - data
    MessageMetadataResponse:
      description: Returns the metadata of a given message.
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
              description: The identifier of the message.
            parentMessageIds:
              type: array
              description: The identifiers of the messages this message references.
              items:
                type: string
            isSolid:
              type: boolean
              description: Tells if the message could get solidified by the node or not.
            referencedByMilestoneIndex:
              type: integer
              nullable: true
              description: >-
                Tells which milestone references this message. If `null` the
                message was not referenced by a milestone yet.
            milestoneIndex:
              type: integer
              description: >-
                If set, this message can be considered as a valid milestone
                message. This field therefore describes the milestone index of
                the involved milestone. A message can be considered as a valid
                milestone message if the milestone payload is valid and if the
                referenced parents in the milestone payload do match the
                referenced parents in the message itself. Note it's possible to
                have different milestone messages that all represent the same
                milestone.
            ledgerInclusionState:
              type: string
              enum:
                - included
                - conflicting
                - noTransaction
              description: >-
                If `included`, the message contains a transaction that has been
                included in the ledger. If `conflicitng`, the message contains a
                transaction that has not been included in the ledger because it
                conflicts with another transaction. If the message does not
                contain a transaction, `ledgerInclusionState` is set to
                `noTransaction`.
            conflictReason:
              type: integer
              description: >-
                Defines the reason why a message is marked as conflicting. Value
                `1` denotes that the referenced UTXO was already spent. Value
                `2`denotes that the referenced UTXO was already spent while
                confirming this milestone. Value `3` denotes that the referenced
                UTXO cannot be found. Value `4` denotes that the sum of the
                inputs and output values does not match. Value `5` denotes that
                the unlock block signature is invalid. Value `6` denotes that
                the input or output type used is unsupported. Value `7` denotes
                that the used address type is unsupported. Value `8` denotes
                that the dust allowance for the address is invalid. Value `9`
                denotes that the semantic validation failed.
            shouldPromote:
              type: boolean
              description: >-
                Tells if the message should be promoted to get more likely
                picked up by the Coordinator.
            shouldReattach:
              type: boolean
              description: Tells if the message should be reattached.
          required:
            - messageId
            - parentMessageIds
            - isSolid
      required:
        - data
    MessageResponse:
      description: Returns a given message.
      properties:
        data:
          type: object
          properties:
            allOf:
              $ref: "#/components/schemas/Message"
      required:
        - data
    MessageChildrenResponse:
      description: Returns the children of a given message.
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
              description: >-
                The message identifier of the given message that was used to
                look up its children.
            maxResults:
              type: integer
              description: The number of results it can return at most.
            count:
              type: integer
              description: The actual number of found results.
            childrenMessageIds:
              type: array
              items:
                type: string
              description: The message identifiers of the found children.
            state:
              type: string
              description: The state used to get the next page of results.
          required:
            - messageId
            - maxResults
            - count
            - childrenMessageIds
            - state
      required:
        - data
    MessageChildrenExpandedResponse:
      description: Returns the children of a given message with expanded results.
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
              description: >-
                The message identifier of the given message that was used to
                look up its children.
            maxResults:
              type: integer
              description: The number of results it can return at most.
            count:
              type: integer
              description: The actual number of found results.
            childrenMessageIds:
              type: array
              items:
                $ref: "#/components/schemas/Record"
            state:
              type: string
              description: The state used to get the next page of results.
          required:
            - messageId
            - maxResults
            - count
            - childrenMessageIds
            - state
      required:
        - data
    OutputResponse:
      description: Returns an output.
      properties:
        data:
          type: object
          properties:
            messageId:
              type: string
              description: The message identifier that references the output.
            transactionId:
              type: string
              description: The identifier of the transaction.
            outputIndex:
              type: integer
              description: The index of the output.
            isSpent:
              type: boolean
              description: Tells if the output is spent or not.
            output:
              anyOf:
                - $ref: "#/components/schemas/SigLockedSingleOutput"
                - $ref: "#/components/schemas/SigLockedDustAllowanceOutput"
          required:
            - messageId
            - transactionId
            - outputIndex
            - isSpent
            - output
      required:
        - data
    OutputsAddressResponse:
      description: Results the outputs for a given address.
      properties:
        data:
          type: object
          properties:
            addressType:
              type: integer
              description: The type of the address. Value `0` denotes a Ed25519 address.
            address:
              type: string
              description: The hex-encoded Ed25519 address.
            maxResults:
              type: integer
              description: The number of results it can return at most.
            count:
              type: integer
              description: The actual number of found results.
            outputIds:
              type: array
              items:
                type: string
              description: The identifiers of the outputs that use a certain address.
            state:
              type: string
              description: The state used to get the next page of results.
          required:
            - addressType
            - address
            - maxResults
            - count
            - outputIds
            - state
      required:
        - data
    OutputsAddressExpandedResponse:
      description: Results the outputs for a given address with expanded results.
      properties:
        data:
          type: object
          properties:
            addressType:
              type: integer
              description: The type of the address. Value `0` denotes a Ed25519 address.
            address:
              type: string
              description: The hex-encoded Ed25519 address.
            maxResults:
              type: integer
              description: The number of results it can return at most.
            count:
              type: integer
              description: The actual number of found results.
            outputIds:
              type: array
              items:
                $ref: "#/components/schemas/Record"
            state:
              type: string
              description: The state used to get the next page of results.
          required:
            - addressType
            - address
            - maxResults
            - count
            - outputIds
            - state
      required:
        - data
    MilestoneResponse:
      description: Returns information about a milestone.
      properties:
        data:
          type: object
          properties:
            index:
              type: integer
              description: The index number of the milestone.
            messageId:
              type: string
              description: >-
                The identifier of a message which describes this milestone. Note
                that different messages could describe the same milestone.
            timestamp:
              type: integer
              description: The timestamp of when the  milestone was issued.
          required:
            - index
            - messageId
            - timestamp
      required:
        - data
    TransactionResponse:
      description: A transaction message with inputs and outputs indicating spent funds.
      properties:
        messageId:
          type: string
          description: >-
            The identifier of a message which describes this milestone. Note
            that different messages could describe the same milestone.
        milestoneIndex:
          type: integer
          description: >-
            If set, this message can be considered as a valid milestone
            message. This field therefore describes the milestone index of
            the involved milestone. A message can be considered as a valid
            milestone message if the milestone payload is valid and if the
            referenced parents in the milestone payload do match the
            referenced parents in the message itself. Note it's possible to
            have different milestone messages that all represent the same
            milestone.
        outputs:
          type: array
          items:
            type: object
            properties:
              output:
                anyOf:
                  - $ref: "#/components/schemas/SigLockedSingleOutput"
                  - $ref: "#/components/schemas/SigLockedDustAllowanceOutput"
              spendingMessageId:
                type: string
                description: >-
                  The spending message ID, if one exists. If this is set,
                  the transaction output is spent.
            required:
              - output
              - spendingMessageId
        inputs:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/UTXOInput"
              - $ref: "#/components/schemas/TreasuryInput"
      required:
        - messageId
        - milestoneIndex
        - outputs
        - inputs
    TransactionsResponse:
      description: Returns transactions for an address.
      properties:
        data:
          type: object
          properties:
            transactions:
              type: array
              items:
                $ref: "#/components/schemas/TransactionResponse"
            state:
              type: string
              description: The state used to get the next page of results.
          required:
            - transactions
            - state
      required:
        - data
