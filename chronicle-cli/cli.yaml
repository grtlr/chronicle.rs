name: chronicli
version: "0.1"
author: IOTA Stiftung
about: Provides commands and metrics to interact with a Chronicle instance.
settings:
  - VersionlessSubcommands
  - ArgRequiredElseHelp
subcommands:
  - start:
      about: Start a new Chronicle instance
      args:
        - no-exit:
            short: n
            long: no-exit
            help: Start the instance and force no exit in the shell
            conflicts_with:
              - service
        - service:
            short: s
            long: service
            help: Start the instance as a background service
            conflicts_with:
              - no-exit
  - stop:
      about: Stop a running Chronicle instance
  - config:
      about: Manage the Chronicle configuration files
      settings:
        - ArgRequiredElseHelp
      args:
        - print:
            long: print
            short: p
            help: Print the current configuration
        - rollback:
            long: rollback
            short: r
            help: Roll the configuration back to the previous revision
  - cluster:
      about: Manage the scylla cluster
      settings:
        - ArgRequiredElseHelp
      args:
        - add-node:
            long: add-node
            short: a
            takes_value: true
            value_name: SCYLLA_DB_ADDRESS
            help: Add a scylla node for the given address
        - remove-node:
            long: rem-node
            short: r
            takes_value: true
            value_name: SCYLLA_DB_ADDRESS
            help: Remove the scylla node for the given address
        - rebuild:
            long: rebuild
            short: b
            conflicts_with:
              - skip-connection
            help: Rebuild the scylla RING
        - list:
            long: list
            short: l
            help: List the running scylla nodes
        - skip-connection:
            short: n
            long: noconnect
            help: Skip trying to connect to the running service and just update the config
  - brokers:
      about: Manage Chronicle brokers
      settings:
        - ArgRequiredElseHelp
      args:
        - list:
            short: l
            long: list
            help: List the running brokers
        - skip-connection:
            short: n
            long: noconnect
            help: Skip trying to connect to the running service and just update the config
      subcommands:
        - add:
            short: a
            about: Add a broker instance to process network messages
            settings:
              - ArgRequiredElseHelp
            args:
              - mqtt-address:
                  short: m
                  takes_value: true
                  value_name: MQTT_ADDRESSES
                  multiple: true
                  help: The MQTT addresses which will be subscribed to receive messages (ex. tcp://api.hornet-0.testnet.chrysalis2.com:1883)
              - endpoint-address:
                  short: e
                  takes_value: true
                  value_name: ENDPOINT_ADDRESSES
                  multiple: true
                  help: The endpoint addresses which will be used to fetch missing messages (ex. https://api.hornet-0.testnet.chrysalis2.com/api/v1)
        - remove:
            short: r
            about: Remove the broker instance with the given id
            settings:
              - ArgRequiredElseHelp
            args:
              - mqtt-address:
                  short: m
                  takes_value: true
                  value_name: MQTT_ADDRESSES
                  multiple: true
                  help: The MQTT addresses to remove (ex. tcp://api.hornet-0.testnet.chrysalis2.com:1883)
              - endpoint-address:
                  short: e
                  takes_value: true
                  value_name: ENDPOINT_ADDRESSES
                  multiple: true
                  help: The endpoint addresses to remove (ex. https://api.hornet-0.testnet.chrysalis2.com/api/v1)
  - archive:
      about: Manage archived milestones
      settings:
        - ArgRequiredElseHelp
      subcommands:
        - import:
            short: i
            about: Import a range of milestones from archive files
            args:
              - directory:
                  short: d
                  long: dir
                  takes_value: true
                  value_name: DIR
                  help: The directory containing archive files to import. Defaults to the configured output directory.
              - range:
                  short: r
                  long: range
                  takes_value: true
                  value_name: RANGE
                  help: >-
                    The range of milestone indexes to import. Defaults to the configured range.
                    Can be any two numbers separated by anything (ex. 100-1000, 100..1000, 100 to 1000 will all work).
              - analytics:
                  short: a
                  long: analytics
                  help: Only import analytics data, not sync or anything else.
              - resume:
                  long: resume
                  help: Resume the importing the process by skipping synced milestone range(s).
        - export:
            short: e
            about: Export a range of milestone to archive files
            args:
              - range:
                  takes_value: true
                  required: true
                  value_name: RANGE
                  help: >-
                    The range of milestone indexes to export. Can be a single milestone (ex. 100) 
                    or any two numbers separated by anything (ex. 100-1000, 100..1000, 100 to 1000 will all work).
        - cleanup:
            short: c
            about: Cleanup log file directory to normalize the file sizes.
            args:
              - directory:
                  short: d
                  long: dir
                  takes_value: true
                  value_name: DIR
                  help: The directory containing archive files to import. Defaults to the configured output directory.
              - log-size:
                  short: s
                  long: log-size
                  help: >-
                    Specify the log max size you want to merge logs as they are merged.
              - no-backup:
                  short: x
                  long: no-backup
                  help: >-
                    Specify that you do not want to backup logs as they are merged. This is potentially dangerous but
                    reduces disk usage.
              - no-exit-on-val-err:
                  short: n
                  long: no-exit-on-val-err
                  help: >-
                    Specify that the merge should continue even if a file is deemed to be invalid. Depending on the
                    validation level, this could happen in the middle of merging a file. In this event, the consumed
                    file will be renamed .err but remain untouched, but milestones from that file will stay merged.
              - validation-level:
                  short: v
                  long: val-level
                  takes_value: true
                  value_name: LEVEL
                  possible_values:
                    - Basic
                    - Light
                    - Full
                    - JustInTime
                  help: |-
                    Specifies a validation level to use for this merge. The following are available:
                      - Basic: Will perform emptiness and file name checking only
                      - Light: Will perform partial deserialization of each milestone, checking only that
                          the index is valid
                      - Full: Will perform full deserialization of each milestone in advance of merging
                          each file. This will avoid merging the entire invalid file.
                      - JustInTime: Will perform full deserialization of each milestone as they are merged.
                          This will avoid merging invalid lines but may partially merge invalid files.
                  conflicts_with:
                    - val-level-basic
                    - val-level-light
                    - val-level-full
                    - val-level-jit
              - val-level-basic:
                  short: b
                  long: basic-val
                  help: Specify Basic validation level, which will perform emptiness and file name checking only
                  conflicts_with:
                    - val-level-light
                    - val-level-full
                    - val-level-jit
              - val-level-light:
                  short: l
                  long: light-val
                  help: >-
                    Specify Light validation level, which will perform partial deserialization of each milestone,
                    checking only that the index is valid
                  conflicts_with:
                    - val-level-basic
                    - val-level-full
                    - val-level-jit
              - val-level-full:
                  short: f
                  long: full-val
                  help: >-
                    Specify Full validation level, which will perform full deserialization of each milestone in advance of merging each file.
                    This will avoid merging the entire invalid file.
                  conflicts_with:
                    - val-level-basic
                    - val-level-light
                    - val-level-jit
              - val-level-jit:
                  short: j
                  long: jit-val
                  help: >-
                    Specify Just In Time validation level, which will perform full deserialization of each milestone as they are merged.
                    This will avoid merging invalid lines but may partially merge invalid files.
                  conflicts_with:
                    - val-level-basic
                    - val-level-light
                    - val-level-full
              - include-finalized:
                  short: a
                  long: all
                  help: >-
                    Include finalized logs (logs which have reached their maximum size) in the merge.
                    This will not include .err files.
        - validate:
            short: v
            about: >-
              Validate log files without modifying them. This will perform various checks and output any issues
              as well as whether or not they can be handled by the merge process.
        - report:
            short: r
            about: >-
              Generate a CSV of analytics data from a range of milestones.
            args:
              - range:
                  takes_value: true
                  required: false
                  value_name: RANGE
                  help: >-
                    The range of milestone indexes to use. Can be a single milestone (ex. 100) 
                    or any two numbers separated by anything (ex. 100-1000, 100..1000, 100 to 1000 will all work).
              - directory:
                  short: d
                  long: dir
                  takes_value: true
                  value_name: DIR
                  help: The directory containing archive files to import. Defaults to the configured output directory.
